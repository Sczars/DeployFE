/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as SignupRouteImport } from './routes/signup.route'
import { Route as LoginRouteImport } from './routes/login.route'
import { Route as IndexRouteImport } from './routes/index.route'
import { Route as LayoutDashboardIndexRouteImport } from './routes/_layout/dashboard/index.route'
import { Route as LayoutDashboardUserRouteImport } from './routes/_layout/dashboard/user.route'
import { Route as LayoutDashboardMessagesRouteImport } from './routes/_layout/dashboard/messages.route'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const SignupRouteRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRouteRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRouteRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutDashboardIndexRouteRoute = LayoutDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDashboardUserRouteRoute = LayoutDashboardUserRouteImport.update({
  id: '/dashboard/user',
  path: '/dashboard/user',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDashboardMessagesRouteRoute =
  LayoutDashboardMessagesRouteImport.update({
    id: '/dashboard/messages',
    path: '/dashboard/messages',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/dashboard/messages': {
      id: '/_layout/dashboard/messages'
      path: '/dashboard/messages'
      fullPath: '/dashboard/messages'
      preLoaderRoute: typeof LayoutDashboardMessagesRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dashboard/user': {
      id: '/_layout/dashboard/user'
      path: '/dashboard/user'
      fullPath: '/dashboard/user'
      preLoaderRoute: typeof LayoutDashboardUserRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dashboard/': {
      id: '/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardIndexRouteImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutDashboardMessagesRouteRoute: typeof LayoutDashboardMessagesRouteRoute
  LayoutDashboardUserRouteRoute: typeof LayoutDashboardUserRouteRoute
  LayoutDashboardIndexRouteRoute: typeof LayoutDashboardIndexRouteRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDashboardMessagesRouteRoute: LayoutDashboardMessagesRouteRoute,
  LayoutDashboardUserRouteRoute: LayoutDashboardUserRouteRoute,
  LayoutDashboardIndexRouteRoute: LayoutDashboardIndexRouteRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '': typeof LayoutRouteWithChildren
  '/dashboard/messages': typeof LayoutDashboardMessagesRouteRoute
  '/dashboard/user': typeof LayoutDashboardUserRouteRoute
  '/dashboard': typeof LayoutDashboardIndexRouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '': typeof LayoutRouteWithChildren
  '/dashboard/messages': typeof LayoutDashboardMessagesRouteRoute
  '/dashboard/user': typeof LayoutDashboardUserRouteRoute
  '/dashboard': typeof LayoutDashboardIndexRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/dashboard/messages': typeof LayoutDashboardMessagesRouteRoute
  '/_layout/dashboard/user': typeof LayoutDashboardUserRouteRoute
  '/_layout/dashboard/': typeof LayoutDashboardIndexRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | ''
    | '/dashboard/messages'
    | '/dashboard/user'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | ''
    | '/dashboard/messages'
    | '/dashboard/user'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/_layout'
    | '/_layout/dashboard/messages'
    | '/_layout/dashboard/user'
    | '/_layout/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  LoginRouteRoute: typeof LoginRouteRoute
  SignupRouteRoute: typeof SignupRouteRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  LoginRouteRoute: LoginRouteRoute,
  SignupRouteRoute: SignupRouteRoute,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.route.tsx"
    },
    "/login": {
      "filePath": "login.route.tsx"
    },
    "/signup": {
      "filePath": "signup.route.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/dashboard/messages",
        "/_layout/dashboard/user",
        "/_layout/dashboard/"
      ]
    },
    "/_layout/dashboard/messages": {
      "filePath": "_layout/dashboard/messages.route.tsx",
      "parent": "/_layout"
    },
    "/_layout/dashboard/user": {
      "filePath": "_layout/dashboard/user.route.tsx",
      "parent": "/_layout"
    },
    "/_layout/dashboard/": {
      "filePath": "_layout/dashboard/index.route.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
